version: '3.8'

x-variables: &default-vars
  DB_HOST: postgres-db
  DB_PORT: 5432
  DB_USER: user
  DB_PASSWORD: password
  DB_NAME: merge-api

  RMQ_HOST: rabbitmq
  RMQ_PORT: 5672
  RMQ_USER: guest
  RMQ_PASSWORD: guest

  REDIS_HOST: redis
  REDIS_PORT: 6379

services:
  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-merge-api}
      DB_USER: ${DB_USER:-user}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.0
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: [ "redis-server" ]

  migrate:
    build:
      context: .
      dockerfile: Dockerfile-migrate
    container_name: migrate
    depends_on:
      db:
        condition: service_healthy
    environment:
      <<: *default-vars
    entrypoint: [
      "migrate",
      "-path", "/migrations",
      "-database", "postgres://${DB_USER:-user}:${DB_PASSWORD:-password}@${DB_HOST:-postgres-db}:${DB_PORT:-5432}/${DB_NAME:-merge-api}?sslmode=disable",
      "up"
    ]

  rabbitmq:
    image: rabbitmq:3.13.3-management
    hostname: rabbitmq
    restart: always
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    environment:
      <<: *default-vars
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  api:
    build:
      context: .
      dockerfile: Dockerfile-api
    container_name: api
    depends_on:
      - db
      - migrate
      - rabbitmq
      - redis
    environment:
      <<: *default-vars
      DB_ADDRESS: ${DB_HOST:-postgres-db}
    ports:
      - "3000:3000"
    volumes:
      - .:/api

  worker:
    build:
      context: .
      dockerfile: Dockerfile-worker
    container_name: worker
    depends_on:
      - db
      - migrate
      - rabbitmq
      - redis
    environment:
      <<: *default-vars
      DB_ADDRESS: ${DB_HOST:-postgres-db}
    volumes:
      - .:/api

volumes:
  pgdata:
